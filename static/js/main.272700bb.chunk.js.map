{"version":3,"sources":["functions.js","cells.js","Parser.js","LocusTable.js","cellTypes/dnaType.js","App.js","registerServiceWorker.js","index.js"],"names":["times","require","iupacAmbiguity","a","c","g","t","r","y","s","w","k","m","b","d","h","v","n","iupacAmbiguityLookup","ag","ct","cg","at","gt","ac","cgt","agt","act","acg","acgt","iupacRegex","pattern","toLowerCase","split","reduce","RegExp","count","sequence","subsequence","re","match","length","bases","randomBase","Math","floor","random","consensusBase","sequences","index","set","Set","forEach","add","charAt","Array","from","sort","join","allSame","module","exports","amplicon","start","end","indexOf","substring","find","search","randomSequence","consensus","i","min","result","firstDifference","looksLikeDna","replace","meltingTemperature","gcContent","charA","charCodeAt","isFormula","cell","startsWith","getFormula","getReferences","formula","references","toRowIndex","toRow","toColumnIndex","prefix","toColumn","column","String","fromCharCode","toReference","coordinates","absoluteRow","absoluteCol","row","concat","col","toCoordinates","reference","bare","firstDigit","translateReference","source","destination","dRow","dCol","sourceIndex","startRange","entireRange","startWidth","translateCell","r2","sourceCellForFill","startArea","entireArea","startHeight","hot","flatten","complement","reverse","parser","Parser","setHot","on","cellCoord","callback","x","data","getData","parse","toUpperCase","startCellCoord","endCellCoord","done","range","r0","r1","c0","c1","fragment","push","parsed","name","params","round","LocusTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contextMenu","key","selection","clickEvent","console","log","items","toggle_stripes","setCellMeta","render","set_reference","ranges","fn","getCell","visit","arguments","settings","type","colHeaders","rowHeaders","width","height","stretchH","formulas","manualColumnResize","react_default","createElement","id","react_handsontable","React","Component","checkType","baseMap","baseMapLight","base","map","toSpan","editor","Handsontable","editors","TextEditor","dnaType","renderer","td","prop","unparsedValue","cellProperties","value","parsedResult","error","getValue","div","chars","toString","spans","document","innerHTML","toColorText","style","fontFamily","renderers","TextRenderer","apply","removeChild","childNodes","appendChild","NumericRenderer","validator","validators","TextValidator","fillDetails","copyDetails","cellTypes","registerCellType","registerValidator","hooks","coords","changes","_fillDetails","change","_change","slicedToArray","translated","_copyDetails$coords","startRow","startCol","endRow","endCol","last","_change2","App","handleChange","setting","states","event","setState","defineProperty","target","checked","displayText","className","float","href","rel","src","alt","src_LocusTable","ref","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.272700bb.chunk.js","sourcesContent":["const { times } = require('ramda')\n\nconst amplicon = (sequence, start, end) => {\n  const a = sequence.indexOf(start)\n  if (a < 0) return ''\n  const b = sequence.indexOf(end, a)\n  if (b < 0) return ''\n  return sequence.substring(a, b + end.length)\n}\n\n// https://droog.gs.washington.edu/parc/images/iupac.html\nconst iupacAmbiguity = {\n  a: 'a',\n  c: 'c',\n  g: 'g',\n  t: 't',\n  r: '[ag]',\n  y: '[ct]',\n  s: '[cg]',\n  w: '[at]',\n  k: '[gt]',\n  m: '[ac]',\n  b: '[cgt]',\n  d: '[agt]',\n  h: '[act]',\n  v: '[acg]',\n  n: '[acgt]',\n}\nconst iupacAmbiguityLookup = {\n  a: 'a',\n  c: 'c',\n  g: 'g',\n  t: 't',\n  ag: 'r',\n  ct: 'y',\n  cg: 's',\n  at: 'w',\n  gt: 'k',\n  ac: 'm',\n  cgt: 'b',\n  agt: 'd',\n  act: 'h',\n  acg: 'v',\n  acgt: 'n',\n}\n\nconst looksLikeDna = s => {\n  if (typeof s === 'number') return false\n  return s.replace(/[acgtryswkmbdhvn]/gi, '') === ''\n}\n\nconst iupacRegex = s => {\n  const pattern = s\n  .toLowerCase()\n  .split('')\n  .reduce((a, c) => a += iupacAmbiguity[c], '')\n  return new RegExp(pattern, \"gi\")\n}\n\nconst find = (sequence, subsequence) => {\n  const re = iupacRegex(subsequence)\n  return sequence.search(re)\n}\n\nconst count = (sequence, subsequence) => {\n  const re = iupacRegex(subsequence)\n  return ((sequence || '').match(re) || []).length\n}\n\nconst bases = 'acgt'.split('')\nconst randomBase = () => bases[Math.floor(4 * Math.random())]\nconst randomSequence = n => times(randomBase, n).join('')\n\nconst consensusBase = (sequences, index) => {\n  const set = new Set()\n  sequences.forEach(s => set.add(s.charAt(index)))\n  const v = Array.from(set)\n  v.sort()\n  return iupacAmbiguityLookup[v.join('')]\n}\n\nconst consensus = sequences => {\n  let n = sequences[0].length\n  for (let i = 1; i < sequences.length; i++)\n    n = Math.min(n, sequences[i].length)\n  let result = ''\n  for (let i = 0; i < n; i++) {\n    result += consensusBase(sequences, i)\n  }\n  return result\n}\n\nconst allSame = (sequences, index) => {\n  switch(consensusBase(sequences, index)) {\n    case 'a':\n    case 'c':\n    case 'g':\n    case 't':\n      return true\n    default:\n      return false\n  }\n}\n\nconst firstDifference = sequences => {\n  let n = sequences[0].length\n  for (let i = 0; i < n; i++) {\n    if (!allSame(sequences, i)) return i\n  }\n  return -1\n}\n\nconst meltingTemperature = sequence => {\n  if (sequence.length <= 13) {\n    const at = count(sequence, 'w')\n    const cg = count(sequence, 's')\n    return 2 * at + 4 * cg\n  }\n  const cg = count(sequence, 's')\n  return 64.9 + 41 * (cg - 16.4) / sequence.length\n}\n\nconst gcContent = sequence => 100 * count(sequence, 's') / sequence.length\n\nmodule.exports = {\n  amplicon,\n  find,\n  count,\n  randomSequence,\n  consensus,\n  firstDifference,\n  looksLikeDna,\n  meltingTemperature,\n  gcContent\n}\n","const charA = 'a'.charCodeAt()\n\nconst isFormula = cell => cell.startsWith('=')\nconst getFormula = cell => cell.substring(1)\nconst translateCell = (source, destination, cell) => {\n  if (!isFormula(cell)) return cell\n  let formula = getFormula(cell)\n  const references = getReferences(formula)\n  references.forEach(r => {\n    const r2 = translateReference(source, destination, r)\n    formula = formula.replace(r, r2)\n  })\n  return `=${formula}`\n}\n\nconst getReferences = formula => {\n  const references = formula.match(/\\$?[a-z]{1,2}\\$?\\d+/gi)\n  if (!references) return []\n  return references\n}\n\nconst toRowIndex = n => n - 1\nconst toRow = n => n + 1\nconst toColumnIndex = prefix => {\n  const s = prefix.toLowerCase()\n  if (s.length === 1) return s.charCodeAt(0) - charA\n  return (s.charCodeAt(0) - charA + 1) * 26 + s.charCodeAt(1) - charA\n}\nconst toColumn = n => {\n  let column = String.fromCharCode(n % 26 + charA)\n  if (n > 25) {\n    column += String.fromCharCode(Math.floor(n / 26) + charA - 1)\n  }\n  return column\n}\n\nconst toReference = (coordinates, absoluteRow, absoluteCol) => {\n  let row = toRow(coordinates.row)\n  if (absoluteRow) row = `$${row}`\n  let column = toColumn(coordinates.col)\n  if (absoluteCol) column = `$${column}`\n  return `${column}${row}`\n}\n\nconst toCoordinates = reference => {\n  const bare = reference.replace(/\\$/g, '')\n  const firstDigit = bare.search(/\\d/)\n  const row = toRowIndex(bare.substring(firstDigit))\n  const col = toColumnIndex(bare.substring(0, firstDigit))\n  return {row, col}\n}\n\nconst translateReference = (source, destination, reference) => {\n  const absoluteCol = reference.startsWith('$')\n  const absoluteRow = reference.substring(1).search('\\\\$') > -1\n  const dRow = destination.row - source.row\n  const dCol = destination.col - source.col\n  const coordinates = toCoordinates(reference)\n  if (!absoluteRow) coordinates.row += dRow\n  if (!absoluteCol) coordinates.col += dCol\n  return toReference(coordinates, absoluteRow, absoluteCol)\n}\n\nconst sourceIndex = (index, startRange, entireRange) => {\n  const startWidth = 1 + startRange[1] - startRange[0]\n  if (startRange[0] === entireRange[0]) {\n    return startRange[0] + (index - entireRange[0]) % startWidth\n  } else {\n    return startRange[1] - (entireRange[1] - index) % startWidth\n  }\n}\n\nconst sourceCellForFill = (r, c, startArea, entireArea) => {\n  const [T, L, B, R] = [0, 1, 2, 3]\n  const startHeight = startArea[B] - startArea[T] + 1\n  const entireHeight = entireArea[B] - entireArea[T] + 1\n  const direction = entireHeight > startHeight ? 'vertical' : 'horizontal'\n\n  if (direction === 'vertical') {\n    const col = c\n    const row = sourceIndex(r, [startArea[T], startArea[B]], [entireArea[T], entireArea[B]])\n    return { row, col }\n  } else {\n    const row = r\n    const col = sourceIndex(c, [startArea[L], startArea[R]], [entireArea[L], entireArea[R]])\n    return { row, col }\n  }\n}\n\nmodule.exports = {\n  isFormula,\n  getFormula,\n  translateCell,\n  getReferences,\n  toRowIndex,\n  toColumnIndex,\n  toReference,\n  toRow,\n  toColumn,\n  toCoordinates,\n  translateReference,\n  sourceCellForFill,\n  sourceIndex\n}\n","const { flatten } = require('ramda')\nconst { complement, reverse } = require('bionode-seq')\nconst {\n  amplicon,\n  find,\n  count,\n  randomSequence,\n  consensus,\n  firstDifference,\n  meltingTemperature,\n  gcContent } = require('./functions')\nconst { Parser } = require('hot-formula-parser')\nconst parser = new Parser()\n\nlet hot\n\nparser.setHot = h => {hot = h}\n\nparser.on('callCellValue', (cellCoord, callback) => {\n  const x = cellCoord.row.index\n  const y = cellCoord.column.index\n  const data = hot.getData()[x][y]\n\n  if (data[0] !== '=')\n    callback(data)\n  else {\n    const parsed = parser.parse(data.substring(1).toUpperCase())\n    callback(parsed.result)\n  }\n})\n\nparser.on('callRangeValue', function(startCellCoord, endCellCoord, done) {\n  const range = []\n  const r0 = startCellCoord.row.index\n  const r1 = endCellCoord.row.index\n  const c0 = startCellCoord.column.index\n  const c1 = endCellCoord.column.index\n\n  for (var row = r0; row <= r1; row++) {\n    const fragment = [];\n\n    for (var col = c0; col <= c1; col++) {\n      const data = hot.getData()[row][col]\n      if (data[0] !== '=')\n        fragment.push(data)\n      else {\n        const parsed = parser.parse(data.substring(1).toUpperCase())\n        fragment.push(parsed.result)\n      }\n    }\n    range.push(fragment);\n  }\n\n  if (range) {\n    done(range)\n  }\n})\n\nparser.on('callFunction', (name, params, done) => {\n  switch (name.toUpperCase()) {\n    case 'REVERSE_COMPLEMENT':\n      done(complement(params[0], true))\n      break\n    case 'REVERSE':\n      done(reverse(params[0]))\n      break\n    case 'COMPLEMENT':\n      done(complement(params[0], false))\n      break\n    case 'AMPLICON':\n      done(amplicon(params[0], params[1], params[2]))\n      break\n    case 'FIND':\n      done(find(params[0], params[1]))\n      break\n    case 'COUNT':\n      done(count(params[0], params[1]))\n      break\n    case 'RANDOM_SEQUENCE':\n      done(randomSequence(params[0]))\n      break\n    case 'BASE':\n      done(params[0].substring(params[1], params[1] + 1))\n      break\n    case 'LENGTH':\n      done(params[0].length)\n      break\n    case 'CONSENSUS':\n      done(consensus(flatten(params[0])))\n      break\n    case 'FIRST_DIFFERENCE':\n      done(firstDifference(flatten(params[0])))\n      break\n    case 'MELTING_TEMPERATURE':\n      done(Math.round(10 * meltingTemperature(params[0])) / 10)\n      break\n    case 'GC_CONTENT':\n      done(Math.round(gcContent(params[0])))\n      break\n    default:\n      break\n  }\n})\n\nmodule.exports = {\n  parser\n}\n","import React from 'react';\nimport { HotTable } from '@handsontable/react';\nconst { forEach } = require('ramda')\n\nconst visit = (hot, ranges, fn) => {\n  forEach( range => {\n    const {start, end} = range\n    for (var row = start.row; row <= end.row; row++) {\n      for (var col = start.col; col <= end.col; col++) {\n        console.log(row, col)\n        fn(hot.getCell(row, col))\n      }\n    }\n  }, ranges)\n}\n\nclass LocusTable extends React.Component {\n  constructor(props) {\n    super(props);\n    const { data } = props\n    this.state = { data }\n  }\n\n  render() {\n    const contextMenu = {\n      callback: function (key, selection, clickEvent) {\n        // Common callback for all options\n        console.log(clickEvent);\n      },\n      items: {\n        \"toggle_stripes\": {\n          name: 'Toggle Stripes',\n          callback: function () {\n            this.setCellMeta(0, 0, 'drawStripes', true)\n            this.render()\n          }\n        },\n        \"set_reference\": {\n          name: 'Set Reference',\n          callback: function () {\n            const ranges = arguments[1]\n            visit(this, ranges, console.log)\n            // console.log('setting cell reference')\n            // console.log(`arguments[1]:`, arguments[1])\n          }\n        },\n        // \"row_above\": {\n        //   disabled: function () {\n        //     // Disable option when first row was clicked\n        //     return this.getSelectedLast()[0] === 0; // `this` === hot3\n        //   }\n        // },\n        // \"row_below\": {\n        //   name: 'Click to add row below' // Set custom text for predefined option\n        // },\n        // \"about\": { // Own custom option\n        //   name: 'Custom option',\n        //   callback: function() { // Callback for specific option\n        //     setTimeout(function() {\n        //       alert('Hello world!'); // Fire alert after menu close (with timeout)\n        //     }, 0);\n        //   }\n        // }\n      }\n    }\n    const settings = {\n      data: this.state.data,\n      type: \"locus-acgt-dna-sequence\",\n      colHeaders: true,\n      rowHeaders: true,\n      width: \"1200\",\n      height: \"700\",\n      stretchH: \"all\",\n      formulas: true,\n      manualColumnResize: true,\n      contextMenu\n    }\n\n    return (\n      <div id=\"hot-app\">\n        <HotTable\n          settings={settings}\n        />\n      </div>\n    );\n  }\n}\nexport default LocusTable\n","import Handsontable from 'handsontable'\n\nconst { checkType } = require('bionode-seq')\nconst { parser } = require('../Parser')\nconst { looksLikeDna } = require('../functions')\n\n// eslint-disable-next-line\nconst validator = function(value, callback) {\n  // TODO: Maybe apply parser here?\n  if (value == null) {\n    value = '';\n  }\n  if (this.allowEmpty && value === '') {\n    callback(true);\n\n  } else if (value === '') {\n    callback(false);\n\n  } else {\n    const type = checkType(value)\n    callback(type === 'dna' || value.replace(/t*/g, '') === '');\n  }\n};\n\nconst baseMap = {\n  a: 'adenine',\n  c: 'cytosine',\n  g: 'guanine',\n  t: 'thymine'\n}\n\nconst baseMapLight = {\n  a: 'adenine-light',\n  c: 'cytosine-light',\n  g: 'guanine-light',\n  t: 'thymine-light'\n}\n\n// const REFERENCE = 'acactatacgtaggactgaggcatgacgcgatcgacgcgatacgagcatcgatcgactacgcggcatcacgaagc'\nconst REFERENCE = ''\n\nconst base = (c, match) => {\n  const map = match ? baseMapLight : baseMap\n  if (c.toLowerCase() in map) return map[c.toLowerCase()]\n  return 'ambiguous'\n}\nconst toSpan = (c, match) => `<span class=\"${base(c, match)}\">${c}</span>`\nconst toStripe = (c, x, match) => `<line class=\"${base(c, match)}\" y1=\"0\" y2=\"20\" x1=\"${x}\" x2=\"${x}\" style=\"stroke-width:1\"/>`\n\n// eslint-disable-next-line\nconst toStripes = sequence => {\n  const chars = sequence.toString().split('')\n  let stripes = ''\n  for (var i = 0; i < chars.length; i++) {\n    const match = chars[i] === REFERENCE[i]\n    stripes += toStripe(chars[i], i, match)\n  }\n  const div = document.createElement('div');\n  div.innerHTML = `<svg height=20 width = ${sequence.length}>${stripes}</svg>`\n  return div\n}\n\nconst toColorText = function(sequence) {\n  const chars = sequence.toString().split('')\n  let spans = ''\n  for (var i = 0; i < chars.length; i++) {\n    const match = chars[i] === REFERENCE[i]\n    spans += toSpan(chars[i], match)\n  }\n  const div = document.createElement('div');\n  div.innerHTML = spans;\n  return div\n}\n\nconst getValue = (hot, unparsedValue) => {\n  if (!unparsedValue.startsWith('='))\n    return unparsedValue\n  parser.setHot(hot)\n  const parsedResult = parser.parse(unparsedValue.substring(1))\n  return (parsedResult.error) ? parsedResult.error : parsedResult.result\n}\n\nconst renderer = function(hot, td, row, col, prop, unparsedValue, cellProperties) {\n  const value = getValue(hot, unparsedValue)\n  if (typeof value === 'number') {\n    Handsontable.renderers.NumericRenderer(hot, td, row, col, prop, value, cellProperties)\n    return\n  }\n  if (typeof value === 'boolean') {\n    Handsontable.renderers.TextRenderer(hot, td, row, col, prop, value, cellProperties)\n    return\n  }\n  if (!looksLikeDna(value)) {\n    Handsontable.renderers.TextRenderer(hot, td, row, col, prop, value, cellProperties)\n    return\n  }\n\n  const div = toColorText(value)\n  td.style.fontFamily = 'monospace';\n  // const div = toStripes(value)\n  Handsontable.renderers.TextRenderer.apply(this, arguments);\n  td.removeChild(td.childNodes[0]);\n  td.appendChild(div)\n};\n\nconst editor = Handsontable.editors.TextEditor\n\nexport default {\n  renderer, //: Handsontable.renderers.TextRenderer,\n  validator: Handsontable.validators.TextValidator,\n  editor\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { sourceCellForFill, translateCell } from './cells'\nimport LocusTable from './LocusTable'\nimport dnaType from './cellTypes/dnaType'\nimport Handsontable from 'handsontable'\n\nlet fillDetails = {}\nlet copyDetails = {}\nHandsontable.cellTypes.registerCellType('locus-acgt-dna-sequence', dnaType)\nHandsontable.validators.registerValidator('locus-acgt-dna-sequence', dnaType.validator)\n\nHandsontable.hooks.add('modifyAutofillRange', (entireArea, startArea) => {\n  fillDetails = { startArea, entireArea }\n})\n\nHandsontable.hooks.add('afterCopy', (data, coords) => {\n  // TODO: handle multiple area selection; that's why coords is an array\n  copyDetails = { coords: coords[0] }\n})\n\nHandsontable.hooks.add('beforeChange', (changes, source) => {\n  if (source === 'Autofill.fill') {\n    const { startArea, entireArea } = fillDetails\n    changes.forEach(change => {\n      // eslint-disable-next-line\n      const [row, col, oldCell, cell] = change\n      const source = sourceCellForFill(row, col, startArea, entireArea)\n      const translated = translateCell(source, {row, col}, cell)\n      change[3] = translated\n    })\n  }\n  if (source === 'CopyPaste.paste') {\n    if (!copyDetails.coords) return // if not copying from within this sheet\n    const { startRow, startCol, endRow, endCol } = copyDetails.coords\n    const startArea = [ startRow, startCol, endRow, endCol ]\n    const last = changes.length - 1\n    const T = changes[0][0]\n    const L = changes[0][1]\n    const B = changes[last][0]\n    const R = changes[last][1]\n    const entireArea = [ T, L, B, R ]\n\n    changes.forEach(change => {\n      // eslint-disable-next-line\n      const [row, col, oldCell, cell] = change\n      const source = sourceCellForFill(row, col, startArea, entireArea)\n      const translated = translateCell(source, {row, col}, cell)\n      change[3] = translated\n    })\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        ['tccagggacattcatgcatcgcctt', '', '', '', '', '', '', '', '', ''],\n        ['tccaggtacattcatgcattgcctt', '', '', '', '', '', '', '', '', ''],\n        ['cat', '', '', '', '', '', '', '', '', ''],\n        ['gcc', '', '', '', '', '', '', '', '', ''],\n        ['=AMPLICON(A1, A3, A4)', 'AMPLICON(A1, A3, A4)', '', '', '', '', '', '', '', ''],\n        ['=BASE(A1, 1)', 'BASE(A1, 1)', '', '', '', '', '', '', '', ''],\n        ['=COMPLEMENT(A1)', 'COMPLEMENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=CONSENSUS(A1:A2)', 'CONSENSUS(A1:A2)', '', '', '', '', '', '', '', ''],\n        ['=COUNT(A1, A3)', 'COUNT(A1, A3)', '', '', '', '', '', '', '', ''],\n        ['=FIND(A1, A3)', 'FIND(A1, A3)', '', '', '', '', '', '', '', ''],\n        ['=FIRST_DIFFERENCE(A1:A2)', 'FIRST_DIFFERENCE(A1:A2)', '', '', '', '', '', '', '', ''],\n        ['=GC_CONTENT(A1)', 'GC_CONTENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=LENGTH(A1)', 'LENGTH(A1)', '', '', '', '', '', '', '', ''],\n        ['=MELTING_TEMPERATURE(A1)', 'MELTING_TEMPERATURE(A1)', '', '', '', '', '', '', '', ''],\n        ['=RANDOM_SEQUENCE(30)', 'RANDOM_SEQUENCE(30)', '', '', '', '', '', '', '', ''],\n        ['=REVERSE_COMPLEMENT(A1)', 'REVERSE_COMPLEMENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=REVERSE(A1)', 'REVERSE(A1)', '', '', '', '', '', '', '', ''],\n      ],\n      // data: times( () => times (() => randomSequence(25), 4), 6),\n      settings: {\n        displayText: false,\n        width: 1200,\n        height: 220,\n      }\n    }\n  }\n\n  handleChange = (setting, states) => {\n    return event => {\n      this.setState({\n        settings: {\n          [setting]: states[event.target.checked ? 1 : 0],\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <span className=\"App-title\">Locus&nbsp;</span>\n            <span className=\"App-title adenine\">A</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title cytosine\">C</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title guanine\">G</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title thymine\">T&nbsp;</span>\n            <span className=\"App-subtitle\">a spreadsheet for sequences</span>\n            <span className=\"App-subtitle\" style={{float:\"right\"}}>\n              <a href=\"https://github.com/carlmanaster/locus-acgt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"GitHub-Mark-Light-32px.png\" alt=\"octocat\"></img>\n              </a>\n            </span>\n        </header>\n        <LocusTable\n          data = {this.state.data}\n          name = \"hot\"\n          id = \"hot-id\"\n          ref = \"hot-ref\"\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}