{"version":3,"sources":["functions.js","Parser.js","LocusTable.js","App.js","registerServiceWorker.js","index.js","cellTypes/dnaType.js","cells.js"],"names":["times","require","iupacAmbiguity","a","c","g","t","r","y","s","w","k","m","b","d","h","v","n","iupacAmbiguityLookup","ag","ct","cg","at","gt","ac","cgt","agt","act","acg","acgt","iupacRegex","pattern","toLowerCase","split","reduce","RegExp","count","sequence","subsequence","re","match","length","bases","randomBase","Math","floor","random","consensusBase","sequences","index","set","Set","forEach","add","charAt","Array","from","sort","join","allSame","module","exports","amplicon","start","end","indexOf","substring","find","search","randomSequence","consensus","i","min","result","firstDifference","looksLikeDna","replace","meltingTemperature","gcContent","hot","flatten","complement","reverse","parser","Parser","setHot","on","cellCoord","callback","x","row","column","data","getData","parse","toUpperCase","startCellCoord","endCellCoord","done","range","r0","r1","c0","c1","fragment","col","push","parsed","name","params","round","setReference","default","LocusTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","contextMenu","key","selection","clickEvent","console","log","items","toggle_stripes","_this2","ranges","fn","visit","arguments","setCellMeta","getCellMeta","drawStripes","render","set_reference","cell","getSelectedRangeLast","highlight","getValue","settings","type","colHeaders","rowHeaders","width","height","stretchH","formulas","manualColumnResize","react_default","createElement","id","react_handsontable","React","Component","fillDetails","copyDetails","Handsontable","cellTypes","registerCellType","dnaType","validators","registerValidator","validator","hooks","entireArea","startArea","coords","changes","source","_fillDetails","translateChanges","_copyDetails$coords","startRow","startCol","endRow","endCol","last","App","handleChange","setting","states","event","setState","defineProperty","target","checked","displayText","className","style","float","href","rel","src","alt","src_LocusTable","ref","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","__webpack_require__","__webpack_exports__","handsontable__WEBPACK_IMPORTED_MODULE_0__","handsontable__WEBPACK_IMPORTED_MODULE_0___default","checkType","baseMap","baseMapLight","REFERENCE","base","map","toSpan","toStripe","editor","editors","TextEditor","renderer","td","prop","unparsedValue","cellProperties","div","value","startsWith","parsedResult","chars","toString","stripes","innerHTML","toStripes","spans","toColorText","fontFamily","renderers","TextRenderer","apply","undefined","childNodes","removeChild","appendChild","NumericRenderer","TextValidator","reference","charA","charCodeAt","isFormula","getFormula","translateCell","destination","formula","getReferences","r2","translateReference","references","toRowIndex","toRow","toColumnIndex","prefix","toColumn","String","fromCharCode","toReference","coordinates","absoluteRow","absoluteCol","toCoordinates","bare","firstDigit","dRow","dCol","sourceIndex","startRange","entireRange","startWidth","sourceCellForFill","startHeight","change","translated"],"mappings":"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","file":"static/js/main.0fb646e3.chunk.js","sourcesContent":["const { times } = require('ramda')\n\nconst amplicon = (sequence, start, end) => {\n  const a = sequence.indexOf(start)\n  if (a < 0) return ''\n  const b = sequence.indexOf(end, a)\n  if (b < 0) return ''\n  return sequence.substring(a, b + end.length)\n}\n\n// https://droog.gs.washington.edu/parc/images/iupac.html\nconst iupacAmbiguity = {\n  a: 'a',\n  c: 'c',\n  g: 'g',\n  t: 't',\n  r: '[ag]',\n  y: '[ct]',\n  s: '[cg]',\n  w: '[at]',\n  k: '[gt]',\n  m: '[ac]',\n  b: '[cgt]',\n  d: '[agt]',\n  h: '[act]',\n  v: '[acg]',\n  n: '[acgt]',\n}\nconst iupacAmbiguityLookup = {\n  a: 'a',\n  c: 'c',\n  g: 'g',\n  t: 't',\n  ag: 'r',\n  ct: 'y',\n  cg: 's',\n  at: 'w',\n  gt: 'k',\n  ac: 'm',\n  cgt: 'b',\n  agt: 'd',\n  act: 'h',\n  acg: 'v',\n  acgt: 'n',\n}\n\nconst looksLikeDna = s => {\n  if (typeof s === 'number') return false\n  return s.replace(/[acgtryswkmbdhvn]/gi, '') === ''\n}\n\nconst iupacRegex = s => {\n  const pattern = s\n  .toLowerCase()\n  .split('')\n  .reduce((a, c) => a += iupacAmbiguity[c], '')\n  return new RegExp(pattern, \"gi\")\n}\n\nconst find = (sequence, subsequence) => {\n  const re = iupacRegex(subsequence)\n  return sequence.search(re)\n}\n\nconst count = (sequence, subsequence) => {\n  const re = iupacRegex(subsequence)\n  return ((sequence || '').match(re) || []).length\n}\n\nconst bases = 'acgt'.split('')\nconst randomBase = () => bases[Math.floor(4 * Math.random())]\nconst randomSequence = n => times(randomBase, n).join('')\n\nconst consensusBase = (sequences, index) => {\n  const set = new Set()\n  sequences.forEach(s => set.add(s.charAt(index)))\n  const v = Array.from(set)\n  v.sort()\n  return iupacAmbiguityLookup[v.join('')]\n}\n\nconst consensus = sequences => {\n  let n = sequences[0].length\n  for (let i = 1; i < sequences.length; i++)\n    n = Math.min(n, sequences[i].length)\n  let result = ''\n  for (let i = 0; i < n; i++) {\n    result += consensusBase(sequences, i)\n  }\n  return result\n}\n\nconst allSame = (sequences, index) => {\n  switch(consensusBase(sequences, index)) {\n    case 'a':\n    case 'c':\n    case 'g':\n    case 't':\n      return true\n    default:\n      return false\n  }\n}\n\nconst firstDifference = sequences => {\n  let n = sequences[0].length\n  for (let i = 0; i < n; i++) {\n    if (!allSame(sequences, i)) return i\n  }\n  return -1\n}\n\nconst meltingTemperature = sequence => {\n  if (sequence.length <= 13) {\n    const at = count(sequence, 'w')\n    const cg = count(sequence, 's')\n    return 2 * at + 4 * cg\n  }\n  const cg = count(sequence, 's')\n  return 64.9 + 41 * (cg - 16.4) / sequence.length\n}\n\nconst gcContent = sequence => 100 * count(sequence, 's') / sequence.length\n\nmodule.exports = {\n  amplicon,\n  find,\n  count,\n  randomSequence,\n  consensus,\n  firstDifference,\n  looksLikeDna,\n  meltingTemperature,\n  gcContent\n}\n","const { flatten } = require('ramda')\nconst { complement, reverse } = require('bionode-seq')\nconst {\n  amplicon,\n  find,\n  count,\n  randomSequence,\n  consensus,\n  firstDifference,\n  meltingTemperature,\n  gcContent } = require('./functions')\nconst { Parser } = require('hot-formula-parser')\nconst parser = new Parser()\n\nlet hot\n\nparser.setHot = h => {hot = h}\n\nparser.on('callCellValue', (cellCoord, callback) => {\n  const x = cellCoord.row.index\n  const y = cellCoord.column.index\n  const data = hot.getData()[x][y]\n\n  if (data[0] !== '=')\n    callback(data)\n  else {\n    const parsed = parser.parse(data.substring(1).toUpperCase())\n    callback(parsed.result)\n  }\n})\n\nparser.on('callRangeValue', function(startCellCoord, endCellCoord, done) {\n  const range = []\n  const r0 = startCellCoord.row.index\n  const r1 = endCellCoord.row.index\n  const c0 = startCellCoord.column.index\n  const c1 = endCellCoord.column.index\n\n  for (var row = r0; row <= r1; row++) {\n    const fragment = [];\n\n    for (var col = c0; col <= c1; col++) {\n      const data = hot.getData()[row][col]\n      if (data[0] !== '=')\n        fragment.push(data)\n      else {\n        const parsed = parser.parse(data.substring(1).toUpperCase())\n        fragment.push(parsed.result)\n      }\n    }\n    range.push(fragment);\n  }\n\n  if (range) {\n    done(range)\n  }\n})\n\nparser.on('callFunction', (name, params, done) => {\n  switch (name.toUpperCase()) {\n    case 'REVERSE_COMPLEMENT':\n      done(complement(params[0], true))\n      break\n    case 'REVERSE':\n      done(reverse(params[0]))\n      break\n    case 'COMPLEMENT':\n      done(complement(params[0], false))\n      break\n    case 'AMPLICON':\n      done(amplicon(params[0], params[1], params[2]))\n      break\n    case 'FIND':\n      done(find(params[0], params[1]))\n      break\n    case 'COUNT':\n      done(count(params[0], params[1]))\n      break\n    case 'RANDOM_SEQUENCE':\n      done(randomSequence(params[0]))\n      break\n    case 'BASE':\n      done(params[0].substring(params[1], params[1] + 1))\n      break\n    case 'LENGTH':\n      done(params[0].length)\n      break\n    case 'CONSENSUS':\n      done(consensus(flatten(params[0])))\n      break\n    case 'FIRST_DIFFERENCE':\n      done(firstDifference(flatten(params[0])))\n      break\n    case 'MELTING_TEMPERATURE':\n      done(Math.round(10 * meltingTemperature(params[0])) / 10)\n      break\n    case 'GC_CONTENT':\n      done(Math.round(gcContent(params[0])))\n      break\n    default:\n      break\n  }\n})\n\nmodule.exports = {\n  parser\n}\n","import React from 'react';\nimport { HotTable } from '@handsontable/react';\nconst { forEach } = require('ramda')\nconst { setReference } = require('./cellTypes/dnaType').default\n\nconst visit = (hot, ranges, fn) => {\n  forEach( range => {\n    const {start, end} = range\n    for (var row = start.row; row <= end.row; row++) {\n      for (var col = start.col; col <= end.col; col++) {\n        fn(row, col)\n      }\n    }\n  }, ranges)\n}\n\nclass LocusTable extends React.Component {\n  constructor(props) {\n    super(props);\n    const { data } = props\n    this.state = { data }\n  }\n\n  render() {\n    const contextMenu = {\n      callback: function (key, selection, clickEvent) {\n        // Common callback for all options\n        console.log(clickEvent);\n      },\n      items: {\n        \"toggle_stripes\": {\n          name: 'Toggle Stripes',\n          callback: function () {\n            const ranges = arguments[1]\n            visit(this, ranges, (row, col) => {\n              this.setCellMeta(row, col, 'drawStripes', !this.getCellMeta(row, col).drawStripes)\n            })\n            this.render()\n          }\n        },\n        \"set_reference\": {\n          name: 'Set Reference',\n          callback: function () {\n            const cell = this.getSelectedRangeLast().highlight\n            setReference(this.getValue(cell))\n            this.render()\n          }\n        },\n        // \"row_above\": {\n        //   disabled: function () {\n        //     // Disable option when first row was clicked\n        //     return this.getSelectedLast()[0] === 0; // `this` === hot3\n        //   }\n        // },\n        // \"row_below\": {\n        //   name: 'Click to add row below' // Set custom text for predefined option\n        // },\n        // \"about\": { // Own custom option\n        //   name: 'Custom option',\n        //   callback: function() { // Callback for specific option\n        //     setTimeout(function() {\n        //       alert('Hello world!'); // Fire alert after menu close (with timeout)\n        //     }, 0);\n        //   }\n        // }\n      }\n    }\n    const settings = {\n      data: this.state.data,\n      type: \"locus-acgt-dna-sequence\",\n      colHeaders: true,\n      rowHeaders: true,\n      width: \"1200\",\n      height: \"700\",\n      stretchH: \"all\",\n      formulas: true,\n      manualColumnResize: true,\n      contextMenu\n    }\n\n    return (\n      <div id=\"hot-app\">\n        <HotTable\n          settings={settings}\n        />\n      </div>\n    );\n  }\n}\nexport default LocusTable\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'handsontable/dist/handsontable.full.css';\nimport { translateChanges } from './cells'\nimport LocusTable from './LocusTable'\nimport dnaType from './cellTypes/dnaType'\nimport Handsontable from 'handsontable'\n\nlet fillDetails = {}\nlet copyDetails = {}\nHandsontable.cellTypes.registerCellType('locus-acgt-dna-sequence', dnaType)\nHandsontable.validators.registerValidator('locus-acgt-dna-sequence', dnaType.validator)\n\nHandsontable.hooks.add('modifyAutofillRange', (entireArea, startArea) => {\n  fillDetails = { startArea, entireArea }\n})\n\nHandsontable.hooks.add('afterCopy', (data, coords) => {\n  // TODO: handle multiple area selection; that's why coords is an array\n  copyDetails = { coords: coords[0] }\n})\n\nHandsontable.hooks.add('beforeChange', (changes, source) => {\n  if (source === 'Autofill.fill') {\n    const { startArea, entireArea } = fillDetails\n    translateChanges(startArea, entireArea, changes)\n  }\n  if (source === 'CopyPaste.paste') {\n    if (!copyDetails.coords) return // if not copying from within this sheet\n    const { startRow, startCol, endRow, endCol } = copyDetails.coords\n    const startArea = [ startRow, startCol, endRow, endCol ]\n    const last = changes.length - 1\n    const T = changes[0][0]\n    const L = changes[0][1]\n    const B = changes[last][0]\n    const R = changes[last][1]\n    const entireArea = [ T, L, B, R ]\n    translateChanges(startArea, entireArea, changes)\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        ['tccagggacattcatgcatcgcctt', '', '', '', '', '', '', '', '', ''],\n        ['tccaggtacattcatgcattgcctt', '', '', '', '', '', '', '', '', ''],\n        ['cat', '', '', '', '', '', '', '', '', ''],\n        ['gcc', '', '', '', '', '', '', '', '', ''],\n        ['=AMPLICON(A1, A3, A4)', 'AMPLICON(A1, A3, A4)', '', '', '', '', '', '', '', ''],\n        ['=BASE(A1, 1)', 'BASE(A1, 1)', '', '', '', '', '', '', '', ''],\n        ['=COMPLEMENT(A1)', 'COMPLEMENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=CONSENSUS(A1:A2)', 'CONSENSUS(A1:A2)', '', '', '', '', '', '', '', ''],\n        ['=COUNT(A1, A3)', 'COUNT(A1, A3)', '', '', '', '', '', '', '', ''],\n        ['=FIND(A1, A3)', 'FIND(A1, A3)', '', '', '', '', '', '', '', ''],\n        ['=FIRST_DIFFERENCE(A1:A2)', 'FIRST_DIFFERENCE(A1:A2)', '', '', '', '', '', '', '', ''],\n        ['=GC_CONTENT(A1)', 'GC_CONTENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=LENGTH(A1)', 'LENGTH(A1)', '', '', '', '', '', '', '', ''],\n        ['=MELTING_TEMPERATURE(A1)', 'MELTING_TEMPERATURE(A1)', '', '', '', '', '', '', '', ''],\n        ['=RANDOM_SEQUENCE(30)', 'RANDOM_SEQUENCE(30)', '', '', '', '', '', '', '', ''],\n        ['=REVERSE_COMPLEMENT(A1)', 'REVERSE_COMPLEMENT(A1)', '', '', '', '', '', '', '', ''],\n        ['=REVERSE(A1)', 'REVERSE(A1)', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n        ['', '', '', '', '', '', '', '', '', ''],\n      ],\n      // data: times( () => times (() => randomSequence(25), 4), 6),\n      settings: {\n        displayText: false,\n        width: 1200,\n        height: 220,\n      },\n    }\n  }\n\n  handleChange = (setting, states) => {\n    return event => {\n      this.setState({\n        settings: {\n          [setting]: states[event.target.checked ? 1 : 0],\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <span className=\"App-title\">Locus&nbsp;</span>\n            <span className=\"App-title adenine\">A</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title cytosine\">C</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title guanine\">G</span>\n            <span className=\"App-title\">&ndash;</span>\n            <span className=\"App-title thymine\">T&nbsp;</span>\n            <span className=\"App-subtitle\">a spreadsheet for sequences</span>\n            <span className=\"App-subtitle\" style={{float:\"right\"}}>\n              <a href=\"https://github.com/carlmanaster/locus-acgt\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"GitHub-Mark-Light-32px.png\" alt=\"octocat\"></img>\n              </a>\n            </span>\n        </header>\n        <LocusTable\n          data = {this.state.data}\n          name = \"hot\"\n          id = \"hot-id\"\n          ref = \"hot-ref\"\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","import Handsontable from 'handsontable'\n\nconst { checkType } = require('bionode-seq')\nconst { parser } = require('../Parser')\nconst { looksLikeDna } = require('../functions')\n\n// eslint-disable-next-line\nconst validator = function(value, callback) {\n  // TODO: Maybe apply parser here?\n  if (value == null) {\n    value = '';\n  }\n  if (this.allowEmpty && value === '') {\n    callback(true);\n\n  } else if (value === '') {\n    callback(false);\n\n  } else {\n    const type = checkType(value)\n    callback(type === 'dna' || value.replace(/t*/g, '') === '');\n  }\n};\n\nconst baseMap = {\n  a: 'adenine',\n  c: 'cytosine',\n  g: 'guanine',\n  t: 'thymine'\n}\n\nconst baseMapLight = {\n  a: 'adenine-light',\n  c: 'cytosine-light',\n  g: 'guanine-light',\n  t: 'thymine-light'\n}\n\n// const REFERENCE = 'acactatacgtaggactgaggcatgacgcgatcgacgcgatacgagcatcgatcgactacgcggcatcacgaagc'\nlet REFERENCE = ''\n\nconst setReference = reference => {\n  REFERENCE = reference\n}\n\nconst base = (c, match) => {\n  const map = match ? baseMapLight : baseMap\n  if (c.toLowerCase() in map) return map[c.toLowerCase()]\n  return 'ambiguous'\n}\nconst toSpan = (c, match) => `<span class=\"${base(c, match)}\">${c}</span>`\nconst toStripe = (c, x, match) => `<line class=\"${base(c, match)}\" y1=\"0\" y2=\"20\" x1=\"${x}\" x2=\"${x}\" style=\"stroke-width:1\"/>`\n\n// eslint-disable-next-line\nconst toStripes = sequence => {\n  const chars = sequence.toString().split('')\n  let stripes = ''\n  for (var i = 0; i < chars.length; i++) {\n    const match = chars[i] === REFERENCE[i]\n    stripes += toStripe(chars[i], i, match)\n  }\n  const div = document.createElement('div');\n  div.innerHTML = `<svg height=20 width = ${sequence.length}>${stripes}</svg>`\n  return div\n}\n\nconst toColorText = function(sequence) {\n  const chars = sequence.toString().split('')\n  let spans = ''\n  for (var i = 0; i < chars.length; i++) {\n    const match = chars[i] === REFERENCE[i]\n    spans += toSpan(chars[i], match)\n  }\n  const div = document.createElement('div');\n  div.innerHTML = spans;\n  return div\n}\n\nconst getValue = (hot, unparsedValue) => {\n  if (!unparsedValue.startsWith('='))\n    return unparsedValue\n  parser.setHot(hot)\n  const parsedResult = parser.parse(unparsedValue.substring(1))\n  return (parsedResult.error) ? parsedResult.error : parsedResult.result\n}\n\nconst renderer = function(hot, td, row, col, prop, unparsedValue, cellProperties) {\n  const value = getValue(hot, unparsedValue)\n  if (typeof value === 'number') {\n    Handsontable.renderers.NumericRenderer(hot, td, row, col, prop, value, cellProperties)\n    return\n  }\n  if (typeof value === 'boolean') {\n    Handsontable.renderers.TextRenderer(hot, td, row, col, prop, value, cellProperties)\n    return\n  }\n  if (!looksLikeDna(value)) {\n    Handsontable.renderers.TextRenderer.apply(this, arguments);\n    return\n  }\n\n  const drawStripes = hot.getCellMeta(row, col).drawStripes\n\n  let div\n  if (drawStripes) {\n    div = toStripes(value)\n  } else {\n    div = toColorText(value)\n    td.style.fontFamily = 'monospace';\n    Handsontable.renderers.TextRenderer.apply(this, arguments);\n  }\n  if (td.childNodes[0] !== undefined)\n    td.removeChild(td.childNodes[0]);\n  td.appendChild(div)\n}\n\nconst editor = Handsontable.editors.TextEditor\n\nexport default {\n  renderer, //: Handsontable.renderers.TextRenderer,\n  validator: Handsontable.validators.TextValidator,\n  editor,\n  setReference\n};\n","const charA = 'a'.charCodeAt()\n\nconst isFormula = cell => cell.startsWith('=')\nconst getFormula = cell => cell.substring(1)\nconst translateCell = (source, destination, cell) => {\n  if (!isFormula(cell)) return cell\n  let formula = getFormula(cell)\n  const references = getReferences(formula)\n  references.forEach(r => {\n    const r2 = translateReference(source, destination, r)\n    formula = formula.replace(r, r2)\n  })\n  return `=${formula}`\n}\n\nconst getReferences = formula => {\n  const references = formula.match(/\\$?[a-z]{1,2}\\$?\\d+/gi)\n  if (!references) return []\n  return references\n}\n\nconst toRowIndex = n => n - 1\nconst toRow = n => n + 1\nconst toColumnIndex = prefix => {\n  const s = prefix.toLowerCase()\n  if (s.length === 1) return s.charCodeAt(0) - charA\n  return (s.charCodeAt(0) - charA + 1) * 26 + s.charCodeAt(1) - charA\n}\nconst toColumn = n => {\n  let column = String.fromCharCode(n % 26 + charA)\n  if (n > 25) {\n    column += String.fromCharCode(Math.floor(n / 26) + charA - 1)\n  }\n  return column\n}\n\nconst toReference = (coordinates, absoluteRow, absoluteCol) => {\n  let row = toRow(coordinates.row)\n  if (absoluteRow) row = `$${row}`\n  let column = toColumn(coordinates.col)\n  if (absoluteCol) column = `$${column}`\n  return `${column}${row}`\n}\n\nconst toCoordinates = reference => {\n  const bare = reference.replace(/\\$/g, '')\n  const firstDigit = bare.search(/\\d/)\n  const row = toRowIndex(bare.substring(firstDigit))\n  const col = toColumnIndex(bare.substring(0, firstDigit))\n  return {row, col}\n}\n\nconst translateReference = (source, destination, reference) => {\n  const absoluteCol = reference.startsWith('$')\n  const absoluteRow = reference.substring(1).search('\\\\$') > -1\n  const dRow = destination.row - source.row\n  const dCol = destination.col - source.col\n  const coordinates = toCoordinates(reference)\n  if (!absoluteRow) coordinates.row += dRow\n  if (!absoluteCol) coordinates.col += dCol\n  return toReference(coordinates, absoluteRow, absoluteCol)\n}\n\nconst sourceIndex = (index, startRange, entireRange) => {\n  const startWidth = 1 + startRange[1] - startRange[0]\n  if (startRange[0] === entireRange[0]) {\n    return startRange[0] + (index - entireRange[0]) % startWidth\n  } else {\n    return startRange[1] - (entireRange[1] - index) % startWidth\n  }\n}\n\nconst sourceCellForFill = (r, c, startArea, entireArea) => {\n  const [T, L, B, R] = [0, 1, 2, 3]\n  const startHeight = startArea[B] - startArea[T] + 1\n  const entireHeight = entireArea[B] - entireArea[T] + 1\n  const direction = entireHeight > startHeight ? 'vertical' : 'horizontal'\n\n  if (direction === 'vertical') {\n    const col = c\n    const row = sourceIndex(r, [startArea[T], startArea[B]], [entireArea[T], entireArea[B]])\n    return { row, col }\n  } else {\n    const row = r\n    const col = sourceIndex(c, [startArea[L], startArea[R]], [entireArea[L], entireArea[R]])\n    return { row, col }\n  }\n}\n\nconst translateChanges = (startArea, entireArea, changes) => {\n  changes.forEach(change => {\n    const row = change[0]\n    const col = change[1]\n    const cell = change[3]\n    const source = sourceCellForFill(row, col, startArea, entireArea)\n    const translated = translateCell(source, {row, col}, cell)\n    change[3] = translated\n  })\n}\n\nmodule.exports = {\n  isFormula,\n  getFormula,\n  translateCell,\n  getReferences,\n  toRowIndex,\n  toColumnIndex,\n  toReference,\n  toRow,\n  toColumn,\n  toCoordinates,\n  translateReference,\n  sourceCellForFill,\n  sourceIndex,\n  translateChanges\n}\n"],"sourceRoot":""}